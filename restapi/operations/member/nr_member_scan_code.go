// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrMemberScanCodeHandlerFunc turns a function with the right signature into a member scan code handler
type NrMemberScanCodeHandlerFunc func(NrMemberScanCodeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrMemberScanCodeHandlerFunc) Handle(params NrMemberScanCodeParams) middleware.Responder {
	return fn(params)
}

// NrMemberScanCodeHandler interface for that can handle valid member scan code params
type NrMemberScanCodeHandler interface {
	Handle(NrMemberScanCodeParams) middleware.Responder
}

// NewNrMemberScanCode creates a new http.Handler for the member scan code operation
func NewNrMemberScanCode(ctx *middleware.Context, handler NrMemberScanCodeHandler) *NrMemberScanCode {
	return &NrMemberScanCode{Context: ctx, Handler: handler}
}

/*NrMemberScanCode swagger:route GET /member/scanCode Member memberScanCode

扫码

扫码

*/
type NrMemberScanCode struct {
	Context *middleware.Context
	Handler NrMemberScanCodeHandler
}

func (o *NrMemberScanCode) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrMemberScanCodeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
