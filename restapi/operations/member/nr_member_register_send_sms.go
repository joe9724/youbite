// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrMemberRegisterSendSmsHandlerFunc turns a function with the right signature into a member register send sms handler
type NrMemberRegisterSendSmsHandlerFunc func(NrMemberRegisterSendSmsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrMemberRegisterSendSmsHandlerFunc) Handle(params NrMemberRegisterSendSmsParams) middleware.Responder {
	return fn(params)
}

// NrMemberRegisterSendSmsHandler interface for that can handle valid member register send sms params
type NrMemberRegisterSendSmsHandler interface {
	Handle(NrMemberRegisterSendSmsParams) middleware.Responder
}

// NewNrMemberRegisterSendSms creates a new http.Handler for the member register send sms operation
func NewNrMemberRegisterSendSms(ctx *middleware.Context, handler NrMemberRegisterSendSmsHandler) *NrMemberRegisterSendSms {
	return &NrMemberRegisterSendSms{Context: ctx, Handler: handler}
}

/*NrMemberRegisterSendSms swagger:route GET /member/register/sendSms Member memberRegisterSendSms

下发注册时的验证码

下发注册时的验证码

*/
type NrMemberRegisterSendSms struct {
	Context *middleware.Context
	Handler NrMemberRegisterSendSmsHandler
}

func (o *NrMemberRegisterSendSms) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrMemberRegisterSendSmsParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
