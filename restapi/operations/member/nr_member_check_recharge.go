// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// NrMemberCheckRechargeHandlerFunc turns a function with the right signature into a member check recharge handler
type NrMemberCheckRechargeHandlerFunc func(NrMemberCheckRechargeParams) middleware.Responder

// Handle executing the request and returning a response
func (fn NrMemberCheckRechargeHandlerFunc) Handle(params NrMemberCheckRechargeParams) middleware.Responder {
	return fn(params)
}

// NrMemberCheckRechargeHandler interface for that can handle valid member check recharge params
type NrMemberCheckRechargeHandler interface {
	Handle(NrMemberCheckRechargeParams) middleware.Responder
}

// NewNrMemberCheckRecharge creates a new http.Handler for the member check recharge operation
func NewNrMemberCheckRecharge(ctx *middleware.Context, handler NrMemberCheckRechargeHandler) *NrMemberCheckRecharge {
	return &NrMemberCheckRecharge{Context: ctx, Handler: handler}
}

/*NrMemberCheckRecharge swagger:route GET /member/checkRecharge Member memberCheckRecharge

检查是否充值成功

检查是否充值成功

*/
type NrMemberCheckRecharge struct {
	Context *middleware.Context
	Handler NrMemberCheckRechargeHandler
}

func (o *NrMemberCheckRecharge) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewNrMemberCheckRechargeParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
