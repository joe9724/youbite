// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "youbite/models"
)

// MemberReportErrOKCode is the HTTP code returned for type MemberReportErrOK
const MemberReportErrOKCode int = 200

/*MemberReportErrOK 上报错误返回

swagger:response memberReportErrOK
*/
type MemberReportErrOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse2003 `json:"body,omitempty"`
}

// NewMemberReportErrOK creates MemberReportErrOK with default headers values
func NewMemberReportErrOK() *MemberReportErrOK {
	return &MemberReportErrOK{}
}

// WithPayload adds the payload to the member report err o k response
func (o *MemberReportErrOK) WithPayload(payload *models.InlineResponse2003) *MemberReportErrOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the member report err o k response
func (o *MemberReportErrOK) SetPayload(payload *models.InlineResponse2003) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MemberReportErrOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrMemberReportErrDefault error

swagger:response memberReportErrDefault
*/
type NrMemberReportErrDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrMemberReportErrDefault creates NrMemberReportErrDefault with default headers values
func NewNrMemberReportErrDefault(code int) *NrMemberReportErrDefault {
	if code <= 0 {
		code = 500
	}

	return &NrMemberReportErrDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the member report err default response
func (o *NrMemberReportErrDefault) WithStatusCode(code int) *NrMemberReportErrDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the member report err default response
func (o *NrMemberReportErrDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the member report err default response
func (o *NrMemberReportErrDefault) WithPayload(payload *models.Error) *NrMemberReportErrDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the member report err default response
func (o *NrMemberReportErrDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrMemberReportErrDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
