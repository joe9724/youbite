// Code generated by go-swagger; DO NOT EDIT.

package member

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// FindPassEditPassHandlerFunc turns a function with the right signature into a find pass edit pass handler
type FindPassEditPassHandlerFunc func(FindPassEditPassParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FindPassEditPassHandlerFunc) Handle(params FindPassEditPassParams) middleware.Responder {
	return fn(params)
}

// FindPassEditPassHandler interface for that can handle valid find pass edit pass params
type FindPassEditPassHandler interface {
	Handle(FindPassEditPassParams) middleware.Responder
}

// NewFindPassEditPass creates a new http.Handler for the find pass edit pass operation
func NewFindPassEditPass(ctx *middleware.Context, handler FindPassEditPassHandler) *FindPassEditPass {
	return &FindPassEditPass{Context: ctx, Handler: handler}
}

/*FindPassEditPass swagger:route GET /member/findPass/editPass Member findPassEditPass

修改密码

修改密码

*/
type FindPassEditPass struct {
	Context *middleware.Context
	Handler FindPassEditPassHandler
}

func (o *FindPassEditPass) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewFindPassEditPassParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
