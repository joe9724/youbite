// Code generated by go-swagger; DO NOT EDIT.

package topic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "youbite/models"
)

// TopicDetailOKCode is the HTTP code returned for type TopicDetailOK
const TopicDetailOKCode int = 200

/*TopicDetailOK 话题详情

swagger:response topicDetailOK
*/
type TopicDetailOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20012 `json:"body,omitempty"`
}

// NewTopicDetailOK creates TopicDetailOK with default headers values
func NewTopicDetailOK() *TopicDetailOK {
	return &TopicDetailOK{}
}

// WithPayload adds the payload to the topic detail o k response
func (o *TopicDetailOK) WithPayload(payload *models.InlineResponse20012) *TopicDetailOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic detail o k response
func (o *TopicDetailOK) SetPayload(payload *models.InlineResponse20012) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TopicDetailOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*NrTopicDetailDefault error

swagger:response topicDetailDefault
*/
type NrTopicDetailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewNrTopicDetailDefault creates NrTopicDetailDefault with default headers values
func NewNrTopicDetailDefault(code int) *NrTopicDetailDefault {
	if code <= 0 {
		code = 500
	}

	return &NrTopicDetailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the topic detail default response
func (o *NrTopicDetailDefault) WithStatusCode(code int) *NrTopicDetailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the topic detail default response
func (o *NrTopicDetailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the topic detail default response
func (o *NrTopicDetailDefault) WithPayload(payload *models.Error) *NrTopicDetailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic detail default response
func (o *NrTopicDetailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *NrTopicDetailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
