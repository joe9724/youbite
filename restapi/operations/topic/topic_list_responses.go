// Code generated by go-swagger; DO NOT EDIT.

package topic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "youbite/models"
)

// TopicListOKCode is the HTTP code returned for type TopicListOK
const TopicListOKCode int = 200

/*TopicListOK 获取反馈列表

swagger:response topicListOK
*/
type TopicListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20011 `json:"body,omitempty"`
}

// NewTopicListOK creates TopicListOK with default headers values
func NewTopicListOK() *TopicListOK {
	return &TopicListOK{}
}

// WithPayload adds the payload to the topic list o k response
func (o *TopicListOK) WithPayload(payload *models.InlineResponse20011) *TopicListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic list o k response
func (o *TopicListOK) SetPayload(payload *models.InlineResponse20011) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TopicListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*TopicListDefault error

swagger:response topicListDefault
*/
type TopicListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewTopicListDefault creates TopicListDefault with default headers values
func NewTopicListDefault(code int) *TopicListDefault {
	if code <= 0 {
		code = 500
	}

	return &TopicListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the topic list default response
func (o *TopicListDefault) WithStatusCode(code int) *TopicListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the topic list default response
func (o *TopicListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the topic list default response
func (o *TopicListDefault) WithPayload(payload *models.Error) *TopicListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the topic list default response
func (o *TopicListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TopicListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
