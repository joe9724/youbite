// Code generated by go-swagger; DO NOT EDIT.

package report_err

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "youbite/models"
)

// ReportErrListOKCode is the HTTP code returned for type ReportErrListOK
const ReportErrListOKCode int = 200

/*ReportErrListOK 获取反馈列表

swagger:response reportErrListOK
*/
type ReportErrListOK struct {

	/*
	  In: Body
	*/
	Payload *models.InlineResponse20022 `json:"body,omitempty"`
}

// NewReportErrListOK creates ReportErrListOK with default headers values
func NewReportErrListOK() *ReportErrListOK {
	return &ReportErrListOK{}
}

// WithPayload adds the payload to the report err list o k response
func (o *ReportErrListOK) WithPayload(payload *models.InlineResponse20022) *ReportErrListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report err list o k response
func (o *ReportErrListOK) SetPayload(payload *models.InlineResponse20022) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportErrListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ReportErrListDefault error

swagger:response reportErrListDefault
*/
type ReportErrListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReportErrListDefault creates ReportErrListDefault with default headers values
func NewReportErrListDefault(code int) *ReportErrListDefault {
	if code <= 0 {
		code = 500
	}

	return &ReportErrListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the report err list default response
func (o *ReportErrListDefault) WithStatusCode(code int) *ReportErrListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the report err list default response
func (o *ReportErrListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the report err list default response
func (o *ReportErrListDefault) WithPayload(payload *models.Error) *ReportErrListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the report err list default response
func (o *ReportErrListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReportErrListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
