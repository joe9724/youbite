// Code generated by go-swagger; DO NOT EDIT.

package community

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// CommunityListHandlerFunc turns a function with the right signature into a community list handler
type CommunityListHandlerFunc func(CommunityListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn CommunityListHandlerFunc) Handle(params CommunityListParams) middleware.Responder {
	return fn(params)
}

// CommunityListHandler interface for that can handle valid community list params
type CommunityListHandler interface {
	Handle(CommunityListParams) middleware.Responder
}

// NewCommunityList creates a new http.Handler for the community list operation
func NewCommunityList(ctx *middleware.Context, handler CommunityListHandler) *CommunityList {
	return &CommunityList{Context: ctx, Handler: handler}
}

/*CommunityList swagger:route GET /community/list Community communityList

获取圈子列表(含条件检索)

获取圈子列表

*/
type CommunityList struct {
	Context *middleware.Context
	Handler CommunityListHandler
}

func (o *CommunityList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewCommunityListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
